import{_ as t,c as a,o as r,ae as o}from"./chunks/framework.CinA6sqf.js";const i="/badge-dark.svg",s="/badge-light.svg",d="/badge-small-dark.svg",l="/badge-small-light.svg",m="/badge-community-dark.svg",n="/badge-community-light.svg",_=JSON.parse('{"title":"The QMK Trademark","description":"","frontmatter":{},"headers":[],"relativePath":"trademark.md","filePath":"trademark.md"}'),h={name:"trademark.md"};function g(p,e,c,k,u,f){return r(),a("div",null,[...e[0]||(e[0]=[o('<h1 id="the-qmk-trademark" tabindex="-1">The QMK Trademark <a class="header-anchor" href="#the-qmk-trademark" aria-label="Permalink to &quot;The QMK Trademark&quot;">​</a></h1><p>&quot;QMK Firmware&quot; and the logo are a trademark registered by Jack Humbert to help encourage keyboard makers to contribute back to the community and to help the community offer support for the keyboards running QMK.</p><p>Anyone is entitled and encouraged to use the logo, the term &quot;QMK (Firmware)&quot;, &quot;Powered by QMK (Firmware)&quot; (or similar wording with &quot;running&quot;, &quot;compatible with&quot;, etc) provided they:</p><ol><li>Don&#39;t imply QMK or its contributors endorse/make the keyboard</li><li><a href="https://github.com/qmk/qmk_firmware/pulls/" target="_blank" rel="noreferrer">Contribute their keyboard&#39;s configuration back to qmk:master roughly by the keyboard&#39;s ship date</a></li><li>Link to the <a href="https://qmk.fm" target="_blank" rel="noreferrer">QMK website</a> or <a href="https://github.com/qmk/qmk_firmware" target="_blank" rel="noreferrer">GitHub repo</a> on their product page</li></ol><p>Images with the logo and preferred wording to use on PCBs, print-outs, websites, stickers, merch, etc are below.</p><h2 id="optional-steps" tabindex="-1">Optional Steps <a class="header-anchor" href="#optional-steps" aria-label="Permalink to &quot;Optional Steps&quot;">​</a></h2><ol><li>Request a tag (<code>&lt;keyboard&gt;-&lt;version&gt;</code> e.g. <code>planck-4.2</code>) of the commit shipped with the keyboard in <a href="https://github.com/qmk/qmk_firmware" target="_blank" rel="noreferrer">qmk/qmk_firmware</a>. A compiled .hex/.bin is usually added to the release page for this.</li><li>Be aware of <a href="https://fsfe.org/activities/ftf/useful-tips-for-vendors.en.html" target="_blank" rel="noreferrer">GPL compliance</a> - having a tag in the repo helps with this.</li></ol><p>If your project uses QMK as the default and official firmware, we&#39;d like to add it to the list on the homepage, so <a href="https://github.com/qmk/qmk.fm/pulls/" target="_blank" rel="noreferrer">let us know by creating an pull request on qmk/qmk.fm</a> if it&#39;s not there!</p><h2 id="images" tabindex="-1">Images <a class="header-anchor" href="#images" aria-label="Permalink to &quot;Images&quot;">​</a></h2><p>These are the default-sized badges in svg format (PNGs: <a href="/badge-dark.png">dark</a>, <a href="/badge-light.png">light</a>):</p><table><tr><td><a href="/badge-dark.svg"><img src="'+i+'" alt="QMK Badge Dark" width="350"></a></td><td><a href="/badge-light.svg"><img src="'+s+'" alt="QMK Badge Light" width="350"></a></td></tr></table><p>A smaller version of each (PNGs: <a href="/badge-small-dark.png">dark</a>, <a href="/badge-small-light.png">light</a>):</p><table><tr><td><a href="/badge-small-dark.svg"><img src="'+d+'" alt="QMK Badge Small Dark" width="350"></a></td><td><a href="/badge-small-light.svg"><img src="'+l+'" alt="QMK Badge Small Light" width="350"></a></td></tr></table><p>And badges for compatible or community-supported keyboards (PNGs: <a href="/badge-community-dark.png">dark</a>, <a href="/badge-community-light.png">light</a>):</p><table><tr><td><a href="/badge-community-dark.svg"><img src="'+m+'" alt="QMK Community Badge Dark" width="350"></a></td><td><a href="/badge-community-light.svg"><img src="'+n+'" alt="QMK Community Badge Light" width="350"></a></td></tr></table><p><strong>Please do not use modified versions of these images</strong> - if you&#39;d like to use something different, <a href="https://github.com/qmk/qmk.fm/issues" target="_blank" rel="noreferrer">let us know</a>, and we&#39;ll do our best to accommodate your wishes!</p>',16)])])}const q=t(h,[["render",g]]);export{_ as __pageData,q as default};
